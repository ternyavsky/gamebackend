services:
  nestjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nestjs
    env_file: .env
    ports:
      - 8000:8000
    restart: always
  nginx:
    image: nginx:stable-alpine
    restart: always
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
      - "/var/www/teamproject/.well-known:/var/www/teamproject/.well-known"
      - "/etc/letsencrypt/live/teamproject.site/fullchain.pem:/etc/letsencrypt/live/teamproject.site/fullchain.pem"
      - "/etc/letsencrypt/live/teamproject.site/privkey.pem:/etc/letsencrypt/live/teamproject.site/privkey.pem"
    ports:
      - 80:80
      - 443:443
  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_storage:/data
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${POSTGRES_USER}
      MINIO_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server --console-address ":9001" /data
  postgres:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - postgres
  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ".env"
    environment:
      PGADMIN_DEFAULT_EMAIL: "bookdb@book.com"
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 600M
    networks:
      - postgres
  redis:
    image: redis:latest
    restart: always
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

volumes:
  pgdata:
  pgadmin-data:
  minio_storage:
networks:
  postgres:
    driver: bridge
